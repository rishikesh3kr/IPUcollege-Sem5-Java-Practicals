Java is a popular programming language, created in 1995. It is owned by Oracle, and more than 3 billion devices run Java.

It is used for:

•	Mobile applications (especially Android apps)
•	Desktop applications
•	Web applications
•	Web servers and application servers
•	Games
•	Database connection
•	And much, much more!

HISTORY OF JAVA:
It is a programming language created in 1991. James Gosling, Mike Sheridan, and Patrick Naughton, a team of Sun engineers known as the Green team initiated the Java language in 1991. Sun Microsystems released its first public implementation in 1996 as Java 1.0.
In 1997, Sun Microsystems approached the ISO standards body and later formalized Java, but it soon withdrew from the process. At one time, Sun made most of its Java implementations available without charge, despite their proprietary software status
On November 13, 2006, Sun released much of its Java virtual machine as free, open-source software. On May 8, 2007, Sun finished the process, making all of its JVM’s core code available under open-source distribution terms.
In 1995 Java was developed by James Gosling, who is known as the Father of Java.
 

JAVA TERMINOLOGY

1.	Java Virtual Machine (JVM): There are three execution phases of a program. They are written, compile and run the program. Writing a program is done by a java programmer. The compilation is done by the JAVAC compiler which is a primary Java compiler included in the Java development kit (JDK). In the Running phase of a program, JVM executes the bytecode generated by the compiler.

2.		Bytecode in the Java development process: As discussed, the Javac compiler of JDK compiles the java source code into bytecode so that it can be executed by JVM. It is saved as a
.class file by the compiler. To view the bytecode, a disassembler like javap can be used.

3.	Java Development Kit (JDK): While we were using the term JDK when we learn about bytecode and JVM. So, as the name suggests, it is a complete Java development kit that includes everything including compiler, Java Runtime Environment (JRE), java debuggers, java docs, etc. For the program to execute in java, we need to install JDK on our computer to create, compile and run the java program.

4.	Java Runtime Environment (JRE): JDK includes JRE. JRE installation on our computers allows the java program to run, however, we cannot compile it. JRE includes a browser, JVM, applet supports, and plugins. For running the java program, a computer needs JRE.

5.	Garbage Collector: In Java, programmers can’t delete the objects. To delete or recollect that memory JVM has a program called Garbage Collector. Garbage Collectors can recollect the objects that are not referenced. So, Java makes the life of a programmer easy by handling memory management.

6.	ClassPath: The ClassPath is the file path where the java runtime and Java compiler look for .class files to load. By default, JDK provides many libraries
 

MAIN FEATURES OF JAVA

1.	Platform Independent: The compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler. This bytecode can run on any platform be it Windows, Linux, or macOS which means if we compile a program on Windows, then we can run it on Linux and vice versa

2.	Object-Oriented Programming Language: Organizing the program in the terms of collection of objects is a way of object- oriented programming, each of which represents an instance of the class.
The four main concepts of Object-Oriented programming are:
	Abstraction
	Encapsulation
	Inheritance
	Polymorphism

3.	Simple: Java is one of the simple languages as it does not have complex features like pointers, operator overloading, multiple inheritances, and Explicit memory allocation.

4.	Robust: Java language is robust which means reliable. It is developed in such a way that it puts a lot of effort into checking errors as early as possible which is why the java compiler can detect even those errors that are not easy to detect by another programming language.

5.	Secure: In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e. it shows ArrayIndexOutOfBound Exception if we try to do so. That is why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java.

6.	Distributed: We can create distributed applications using the java programming language. Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java.

7.	Multithreading: Java supports multithreading. It is a Java feature that allows concurrent execution of two or more parts of a program for maximum utilization of the CPU.
 

8.	Portable: As we know, java code written on one machine can be run on another machine. The platform-independent feature of java in which its platform-independent bytecode can be taken to any platform for execution makes java portable.

